version: '3.8'

services:
  postgis:
    image: postgis/postgis:13-3.1-alpine
    container_name: postgis
    volumes:
      - ./postgis_data:/var/lib/postgresql/data  # Persist PostGIS data
      - ./init_db:/docker-entrypoint-initdb.d/   # SQL initialization script
    environment:
      POSTGRES_DB: comet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Map PostGIS to port 5433 to avoid conflicts
    networks:
      - webnet

  geoserver:
    image: oscarfonts/geoserver
    container_name: geoserver
    volumes:
      - ./geoserver_data:/opt/geoserver/data_dir  # Persist GeoServer config
      - ./geoserver_config/web.xml:/opt/geoserver/data_dir/security/web.xml  # Mount custom web.xml for CORS
    environment:
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_ADMIN_PASSWORD: geoserver
    ports:
      - "8081:8080"  # Map GeoServer to port 8081 to avoid conflicts
    networks:
      - webnet
    depends_on:
      - postgis


  flask:
    build: ./flask_app
    container_name: flask
    volumes:
      - ./flask_app:/usr/src/app  # Your Flask app
    environment:
      POSTGIS_HOST: postgis
      POSTGIS_DB: comet
      POSTGIS_USER: postgres
      POSTGIS_PASSWORD: postgres
      FLASK_APP: gateway.py  # Explicitly set the FLASK_APP variable
    ports:
      - "5000:5000"
    networks:
      - webnet

networks:
  webnet:
